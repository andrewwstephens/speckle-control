int tcl_andorEnableKeepCleans(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
**argv);
int tcl_andorFilter_GetAveragingFrameCount(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorFilter_GetDataAveragingMode(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorFilter_GetThreshold(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetAvailableCameras(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetBaselineClamp(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetCameraSerialNumber(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetCurrentCamera(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetEMAdvanced(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetEMCCDGain(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetExternalTriggerTermination(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetFIFOUsage(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetFKExposureTime(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetFilterMode(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetFrontEndStatus(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetGateMode(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetHVflag(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetIRQ(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetImageRotate(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetKeepCleanTime(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetMaximumExposure(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetMaximumNumberRingExposureTimes(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetMinimumImageLength(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetMinimumNumberInSeries(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetNumberADChannels(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetNumberAmp(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetNumberDevices(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetNumberFKVShiftSpeeds(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetNumberHorizontalSpeeds(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetNumberIO(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetNumberPreAmpGains(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetNumberRingExposureTimes(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetNumberVSAmplitudes(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetNumberVSSpeeds(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetNumberVerticalSpeeds(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetReadOutTime(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetStartUpTime(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetStatus(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetTECStatus(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorGetTotalNumberImagesAcquired(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorIsCoolerOn(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
int tcl_andorIsInternalMechanicalShutter(ClientData clientData, Tcl_Interp *interp, int argc, char **argv);
