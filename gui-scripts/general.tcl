
# 
# This file contains the the scripts which create the Apogee camera GUI. The procedures
# use the C++ API via a wrapper generated by SWIG.
#
#



#---------------------------------------------------------------------------
#---------------------------------------------------------------------------
#
#  Procedure  : showstatus
#
#---------------------------------------------------------------------------
#  Author     : Dave Mills (randomfactory@gmail.com)
#  Version    : 0.9
#  Date       : Aug-01-2017
#  Copyright  : The Random Factory, Tucson AZ
#  License    : GNU GPL
#  Changes    :
#
#  This routine displays text messages in the status window
#
#  Arguments  :
#
#               msg	-	message text
 
proc showstatus { msg } {
 
#
#  Globals    :		n/a
#  
global SPECKLEGUI
  if { $SPECKLEGUI } {
    .status.msg configure -text "$msg"
    update
  } else {
    puts stdout "$msg"
  }
}







#---------------------------------------------------------------------------
#---------------------------------------------------------------------------
#
#  Procedure  : choosedir
#
#---------------------------------------------------------------------------
#  Author     : Dave Mills (randomfactory@gmail.com)
#  Version    : 0.9
#  Date       : Aug-01-2017
#  Copyright  : The Random Factory, Tucson AZ
#  License    : GNU GPL
#  Changes    :
#
#  This procedure prompts the user to specify a directory using a 
#  flexible GUI interface.
#
#  Arguments  :
#
#               type	-	Calibration type (flat,dark,sky,zero)
#               name	-	Image file name
 
proc choosedir { type name} {
 
#
#  Globals    :
#  
#               CALS	-	Calibration run parmaeters
#               CATALOGS	-	Catalog configurations
#               SCOPE	-	Telescope parameters, gui setup
global CALS CATALOGS SCOPE env
   if { $type == "data" } {
     set cfg [tk_chooseDirectory -initialdir $env(HOME)/data]
     if { $cfg != "" } {
       set SCOPE(datadir) $cfg
       .main.seldir configure -text "$cfg"
       commandAndor red "datadir $cfg"
       commandAndor blue "datadir $cfg"
       set SCOPE(datadir) $cfg
     }
   } else {
     set cfg [tk_chooseDirectory -initialdir $CALS(home)/$name]
   }
   if { [string length $cfg] > 0 } {
     if { [file exists $cfg] == 0 } {
        exec mkdir -p $cfg
     }
     switch $type {
         calibrations {set CALS($name,dir) $cfg }
         catalogs     {set CATALOGS($name,dir) $cfg }
     }
   }
}




proc setutc { {id 0} } {
global SCOPE CAMSTATUS
  set now [split [exec  date -u +%Y-%m-%d,%T.%U] ,]
  set SCOPE(obsdate) [lindex $now 0]
  set SCOPE(obstime) [lindex $now 1]
}






proc confirmaction { msg } {
   set it [ tk_dialog .d "Confirm" "$msg ?" {} -1 No "Yes"]           
   return $it
}







#---------------------------------------------------------------------------
#---------------------------------------------------------------------------
#
#  Procedure  : toggle
#
#---------------------------------------------------------------------------
#  Author     : Dave Mills (randomfactory@gmail.com)
#  Version    : 0.9
#  Date       : Aug-01-2017
#  Copyright  : The Random Factory, Tucson AZ
#  License    : GNU GPL
#  Changes    :
#
#  This routine opens/closes any window based upon it current open/closed status
#
#  Arguments  :
#
#               win	-	Widget id of window
 
proc toggle { win } {
 
#
#  Globals    :
#  
   if { [winfo ismapped $win] } { 
      wm withdraw $win
   } else {
      wm deiconify $win
   }
}




